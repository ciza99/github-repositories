{"version":3,"sources":["components/Header/StyledInputs.ts","components/Header/index.tsx","components/FeatureCard/index.tsx","components/Home/index.tsx","components/NavItem/index.tsx","components/InfoCard/index.tsx","components/InfoItem/index.tsx","atoms/user.ts","components/Information/index.tsx","components/Spinner/index.tsx","api/index.ts","atoms/repositories.ts","components/RepoCard/index.tsx","components/IconMessage/index.tsx","components/Repositories/index.tsx","atoms/organizations.ts","components/OrgCard/index.tsx","components/Organizations/index.tsx","components/ErrorFallback/index.tsx","components/UserNav/index.tsx","components/UserPage/index.tsx","components/NotFound/index.tsx","components/App/index.tsx","reportWebVitals.ts","index.tsx"],"names":["WhiteTextField","withStyles","root","color","borderColor","TextField","WhiteButton","Button","classes","BEMHelper","Header","history","useHistory","useForm","register","onSubmit","handleSubmit","data","username","push","to","fontSize","variant","label","size","required","type","makePrimaryColor","FeatureCard","Icon","title","text","PrimaryIcon","Home","SearchIcon","FolderOpenIcon","DomainIcon","href","NavItem","linkTo","activeClassName","InfoCard","children","InfoItem","userState","atom","key","default","DATE_FORMAT","Information","user","useRecoilValue","createdAt","moment","created_at","format","updatedAt","updated_at","PeopleAltOutlinedIcon","followers","following","FolderOpenOutlinedIcon","public_repos","EventOutlinedIcon","TwitterIcon","twitter_username","MailOutlineIcon","email","InfoOutlinedIcon","bio","LocationOnIcon","location","BusinessOutlinedIcon","company","Spinner","BASE_URL","getUserData","axios","get","then","response","getRepos","url","getOrgs","repositoriesState","selector","a","login","RepoCard","repository","name","html_url","CodeOutlinedIcon","language","CallSplitOutlinedIcon","forks_count","CopyrightOutlinedIcon","license","StorageOutlinedIcon","IconMessage","Repositories","repositories","length","DataUsageIcon","map","id","organizationsState","OrgCard","org","src","avatar_url","alt","description","Organizations","organizations","DomainDisabledIcon","organization","ErrorFallback","error","resetErrorBoundary","ErrorOutlineIcon","message","onClick","UserNav","match","useRouteMatch","fallback","DomainOutlinedIcon","FallbackComponent","Suspense","path","UserPage","useState","setError","useParams","useRecoilState","setUser","useEffect","fetchedUser","fetchUser","NotFound","App","basename","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4adaf9ed.chunk.js","sourcesContent":["import { Button, TextField, withStyles } from \"@material-ui/core\";\r\n\r\nexport const WhiteTextField = withStyles({\r\n  root: {\r\n    \"& .MuiInputBase-input\": {\r\n      color: \"white\",\r\n    },\r\n    \"& .MuiFormLabel-root\": {\r\n      color: \"#ededed\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& fieldset\": {\r\n        borderColor: \"white\",\r\n      },\r\n      \"&:hover fieldset\": {\r\n        borderColor: \"white\",\r\n      },\r\n      \"&.Mui-focused fieldset\": {\r\n        borderColor: \"white\",\r\n      },\r\n    },\r\n  },\r\n})(TextField);\r\n\r\nexport const WhiteButton = withStyles({\r\n  root: {\r\n    borderColor: \"white\",\r\n    color: \"white\",\r\n  },\r\n})(Button);\r\n","import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nimport BEMHelper from \"react-bem-helper\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { WhiteButton, WhiteTextField } from \"./StyledInputs\";\r\n\r\nconst classes = new BEMHelper(\"header\");\r\n\r\nconst Header = () => {\r\n  const history = useHistory();\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  const onSubmit = handleSubmit((data) => {\r\n    const { username } = data;\r\n    if (!username) return;\r\n    history.push(`/users/${username}/info`);\r\n  });\r\n\r\n  return (\r\n    <header {...classes()}>\r\n      <Link {...classes(\"title\")} to=\"/\">\r\n        <GitHubIcon fontSize=\"large\" />\r\n        <h1 {...classes(\"heading\")}>GitHub-Viewer</h1>\r\n      </Link>\r\n      <form {...classes(\"search\")} onSubmit={onSubmit}>\r\n        <WhiteTextField\r\n          variant=\"outlined\"\r\n          label=\"username\"\r\n          size=\"small\"\r\n          required\r\n          {...register(\"username\")}\r\n        />\r\n        <WhiteButton variant=\"outlined\" type=\"submit\">\r\n          Search\r\n        </WhiteButton>\r\n      </form>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { FC } from \"react\";\r\nimport \"./FeatureCard.css\";\r\n\r\nimport BEMHelper from \"react-bem-helper\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport { MaterialIcon } from \"../../types/MaterialIcon\";\r\n\r\nconst classes = new BEMHelper(\"feature-card\");\r\n\r\nconst makePrimaryColor = withStyles({\r\n  root: {\r\n    color: \"var(--clr-primary)\",\r\n    fontSize: \"3rem\",\r\n  },\r\n});\r\n\r\ninterface Props {\r\n  Icon: MaterialIcon;\r\n  title: string;\r\n  text: string;\r\n}\r\n\r\nconst FeatureCard: FC<Props> = ({ Icon, title, text }) => {\r\n  const PrimaryIcon = makePrimaryColor(Icon);\r\n\r\n  return (\r\n    <div {...classes()}>\r\n      <PrimaryIcon />\r\n      <p {...classes(\"title\")}>{title}</p>\r\n      <p {...classes(\"text\")}>{text}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeatureCard;\r\n","import React from \"react\";\r\nimport \"./Home.css\";\r\n\r\nimport BEMHelper from \"react-bem-helper\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport FolderOpenIcon from \"@material-ui/icons/FolderOpen\";\r\nimport DomainIcon from \"@material-ui/icons/Domain\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport FeatureCard from \"../FeatureCard\";\r\n\r\nconst classes = new BEMHelper(\"home\");\r\n\r\nconst Home = () => (\r\n  <div {...classes()}>\r\n    <h1 {...classes(\"heading\")}>GitHub-Viewer</h1>\r\n    <h2 {...classes(\"subheading\")}>\r\n      Simple app to view information about GitHub users. Start by searching a\r\n      user by his username in the app header.\r\n    </h2>\r\n    <div {...classes(\"cards\")}>\r\n      <FeatureCard\r\n        Icon={SearchIcon}\r\n        title=\"Search for users\"\r\n        text=\"Find any user on GitHub by its username and view information about this user.\"\r\n      />\r\n      <FeatureCard\r\n        Icon={FolderOpenIcon}\r\n        title=\"View repositories\"\r\n        text=\"Find information about the users repositories including their license or size.\"\r\n      />\r\n      <FeatureCard\r\n        Icon={DomainIcon}\r\n        title=\"View organizations\"\r\n        text=\"Find users organizations and link to more information.\"\r\n      />\r\n    </div>\r\n    <div {...classes(\"footer\")}>\r\n      <p {...classes(\"copyright\")}>Copyright © 2021 Michal Čížek</p>\r\n      <GitHubIcon {...classes(\"icon\")} fontSize=\"large\" />\r\n      <a\r\n        {...classes(\"link\")}\r\n        href=\"https://github.com/ciza99/github-repositories\"\r\n      >\r\n        github repository for this project\r\n      </a>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Home;\r\n","import React, { FC } from \"react\";\r\nimport \"./NavItem.css\";\r\n\r\nimport BEMHelper from \"react-bem-helper\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { MaterialIcon } from \"../../types/MaterialIcon\";\r\n\r\nconst classes = new BEMHelper(\"nav-item\");\r\n\r\ninterface Props {\r\n  Icon: MaterialIcon;\r\n  linkTo: string;\r\n  text: string;\r\n}\r\n\r\nconst NavItem: FC<Props> = ({ linkTo, text, Icon }) => (\r\n  <NavLink to={linkTo} {...classes()} activeClassName=\"nav-item--active\">\r\n    <Icon />\r\n    <p {...classes(\"text\")}>{text}</p>\r\n  </NavLink>\r\n);\r\n\r\nexport default NavItem;\r\n","import React, { FC } from \"react\";\r\nimport \"./InfoCard.css\";\r\n\r\nimport BEMHelper from \"react-bem-helper\";\r\n\r\nconst classes = new BEMHelper(\"info-card\");\r\n\r\ninterface Props {\r\n  title: string;\r\n}\r\n\r\nconst InfoCard: FC<Props> = ({ title, children }) => (\r\n  <div {...classes()}>\r\n    <p {...classes(\"title\")}>{title}</p>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default InfoCard;\r\n","import React, { FC } from \"react\";\r\nimport \"./InfoItem.css\";\r\n\r\nimport BEMHelper from \"react-bem-helper\";\r\nimport { MaterialIcon } from \"../../types/MaterialIcon\";\r\n\r\nconst classes = new BEMHelper(\"info-item\");\r\n\r\ninterface Props {\r\n  Icon: MaterialIcon;\r\n  text: string;\r\n}\r\n\r\nconst InfoItem: FC<Props> = ({ Icon, text }) => (\r\n  <div {...classes()}>\r\n    <Icon />\r\n    <p {...classes(\"text\")}>{text}</p>\r\n  </div>\r\n);\r\n\r\nexport default InfoItem;\r\n","import { atom } from \"recoil\";\r\nimport { User } from \"../types/User\";\r\n\r\nexport const userState = atom<User | null>({\r\n  key: \"userState\",\r\n  default: null,\r\n});\r\n\r\nexport default userState;\r\n","import React from \"react\";\r\nimport \"./Information.css\";\r\n\r\nimport BEMHelper from \"react-bem-helper\";\r\nimport PeopleAltOutlinedIcon from \"@material-ui/icons/PeopleAltOutlined\";\r\nimport FolderOpenOutlinedIcon from \"@material-ui/icons/FolderOpenOutlined\";\r\nimport EventOutlinedIcon from \"@material-ui/icons/EventOutlined\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport moment from \"moment\";\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\r\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\r\nimport BusinessOutlinedIcon from \"@material-ui/icons/BusinessOutlined\";\r\nimport InfoCard from \"../InfoCard\";\r\nimport InfoItem from \"../InfoItem\";\r\nimport { userState } from \"../../atoms/user\";\r\n\r\nconst DATE_FORMAT = \"DD/MM/YYYY\";\r\n\r\nconst classes = new BEMHelper(\"information\");\r\n\r\nconst Information = () => {\r\n  const user = useRecoilValue(userState);\r\n\r\n  if (!user) {\r\n    return <></>;\r\n  }\r\n\r\n  const createdAt = moment(user.created_at).format(DATE_FORMAT);\r\n  const updatedAt = moment(user.updated_at).format(DATE_FORMAT);\r\n\r\n  return (\r\n    <div {...classes()}>\r\n      <InfoCard title=\"Following\">\r\n        <InfoItem\r\n          Icon={PeopleAltOutlinedIcon}\r\n          text={`${user.followers} followers`}\r\n        />\r\n        <InfoItem\r\n          Icon={PeopleAltOutlinedIcon}\r\n          text={`following ${user.following}`}\r\n        />\r\n      </InfoCard>\r\n      <InfoCard title=\"Repositories\">\r\n        <InfoItem\r\n          Icon={FolderOpenOutlinedIcon}\r\n          text={`${user.public_repos} public repositories`}\r\n        />\r\n      </InfoCard>\r\n      <InfoCard title=\"Timeline\">\r\n        <InfoItem Icon={EventOutlinedIcon} text={`created at ${createdAt}`} />\r\n        <InfoItem Icon={EventOutlinedIcon} text={`updated at ${updatedAt}`} />\r\n      </InfoCard>\r\n      <InfoCard title=\"Socials\">\r\n        <InfoItem\r\n          Icon={TwitterIcon}\r\n          text={user.twitter_username || \"twitter not specified\"}\r\n        />\r\n        <InfoItem\r\n          Icon={MailOutlineIcon}\r\n          text={user.email || \"email not specified\"}\r\n        />\r\n      </InfoCard>\r\n      <InfoCard title=\"General\">\r\n        <InfoItem\r\n          Icon={InfoOutlinedIcon}\r\n          text={user.bio || \"bio not specified\"}\r\n        />\r\n        <InfoItem\r\n          Icon={LocationOnIcon}\r\n          text={user.location || \"location not specified\"}\r\n        />\r\n        <InfoItem\r\n          Icon={BusinessOutlinedIcon}\r\n          text={user.company || \"company not specified\"}\r\n        />\r\n      </InfoCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Information;\r\n","import React from \"react\";\r\nimport \"./Spinner.css\";\r\n\r\nimport BEMHelper from \"react-bem-helper\";\r\n\r\nconst classes = new BEMHelper(\"spinner\");\r\n\r\nconst Spinner = () => (\r\n  <div {...classes()}>\r\n    <div {...classes(\"dot\")} />\r\n  </div>\r\n);\r\n\r\nexport default Spinner;\r\n","// Feel free to use something else than 'axios', for example 'ky'\r\nimport axios from \"axios\";\r\n\r\n// Documentation is at https://developer.github.com/v3/\r\nconst BASE_URL = \"https://api.github.com\";\r\n\r\nexport const getUserData = (username: string) =>\r\n  axios.get(`${BASE_URL}/users/${username}`).then((response) => response.data);\r\n\r\nexport const getRepos = (username: string) => {\r\n  const url = `${BASE_URL}/users/${username}/repos?per_page=250`;\r\n  return axios.get(url).then((response) => response.data);\r\n};\r\n\r\nexport const getOrgs = (username: string) =>\r\n  axios\r\n    .get(`${BASE_URL}/users/${username}/orgs`)\r\n    .then((response) => response.data);\r\n","import { selector } from \"recoil\";\r\nimport { getRepos } from \"../api\";\r\nimport { Repository } from \"../types/Repository\";\r\nimport { userState } from \"./user\";\r\n\r\nexport const repositoriesState = selector<Repository[]>({\r\n  key: \"repositories\",\r\n  get: async ({ get }) => {\r\n    const username = get(userState)?.login;\r\n    if (!username) return [];\r\n    return getRepos(username ?? \"\");\r\n  },\r\n});\r\n\r\nexport default repositoriesState;\r\n","import React, { FC } from \"react\";\r\nimport \"./RepoCard.css\";\r\n\r\nimport BEMHelper from \"react-bem-helper\";\r\nimport CodeOutlinedIcon from \"@material-ui/icons/CodeOutlined\";\r\nimport CallSplitOutlinedIcon from \"@material-ui/icons/CallSplitOutlined\";\r\nimport CopyrightOutlinedIcon from \"@material-ui/icons/CopyrightOutlined\";\r\nimport StorageOutlinedIcon from \"@material-ui/icons/StorageOutlined\";\r\nimport InfoItem from \"../InfoItem\";\r\nimport { Repository } from \"../../types/Repository\";\r\n\r\nconst classes = new BEMHelper(\"repo-card\");\r\n\r\ninterface Props {\r\n  repository: Repository;\r\n}\r\n\r\nconst RepoCard: FC<Props> = ({ repository }) => (\r\n  <div {...classes()}>\r\n    <div {...classes(\"header\")}>\r\n      <p {...classes(\"title\")}>{repository.name}</p>\r\n      <a {...classes(\"link\")} href={repository.html_url}>\r\n        view on github\r\n      </a>\r\n    </div>\r\n    <div {...classes(\"info\")}>\r\n      <InfoItem\r\n        Icon={CodeOutlinedIcon}\r\n        text={repository.language ?? \"language not specified\"}\r\n      />\r\n      <InfoItem\r\n        Icon={CallSplitOutlinedIcon}\r\n        text={`${repository.forks_count} forks`}\r\n      />\r\n      <InfoItem\r\n        Icon={CopyrightOutlinedIcon}\r\n        text={repository.license?.name || \"license not specified\"}\r\n      />\r\n      <InfoItem Icon={StorageOutlinedIcon} text={`${repository.size} kB`} />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default RepoCard;\r\n","import React, { FC } from \"react\";\r\nimport \"./IconMessage.css\";\r\n\r\nimport BEMHelper from \"react-bem-helper\";\r\nimport { MaterialIcon } from \"../../types/MaterialIcon\";\r\n\r\nconst classes = new BEMHelper(\"icon-message\");\r\n\r\ninterface Props {\r\n  Icon: MaterialIcon;\r\n}\r\n\r\nconst IconMessage: FC<Props> = ({ Icon, children }) => (\r\n  <div {...classes()}>\r\n    <div {...classes(\"icon-wrapper\")}>\r\n      <Icon fontSize=\"large\" />\r\n    </div>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default IconMessage;\r\n","import React from \"react\";\r\nimport \"./Repositories.css\";\r\n\r\nimport BEMHelper from \"react-bem-helper\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport DataUsageIcon from \"@material-ui/icons/DataUsage\";\r\nimport { repositoriesState } from \"../../atoms/repositories\";\r\nimport RepoCard from \"../RepoCard\";\r\nimport { userState } from \"../../atoms/user\";\r\nimport IconMessage from \"../IconMessage\";\r\n\r\nconst classes = new BEMHelper(\"repositories\");\r\n\r\nconst Repositories = () => {\r\n  const user = useRecoilValue(userState);\r\n  const repositories = useRecoilValue(repositoriesState);\r\n\r\n  if (repositories.length === 0) {\r\n    return (\r\n      <IconMessage Icon={DataUsageIcon}>\r\n        <p>\r\n          The user <span {...classes(\"username\")}>{user?.login}</span> does not\r\n          have any repositories\r\n        </p>\r\n      </IconMessage>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div {...classes()}>\r\n      {repositories?.map((repository) => (\r\n        <RepoCard repository={repository} key={repository.id} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Repositories;\r\n","import { selector } from \"recoil\";\r\nimport { getOrgs } from \"../api\";\r\nimport { Organization } from \"../types/Organization\";\r\nimport { userState } from \"./user\";\r\n\r\nexport const organizationsState = selector<Organization[]>({\r\n  key: \"organizations\",\r\n  get: async ({ get }) => {\r\n    const username = get(userState)?.login;\r\n    if (!username) return [];\r\n    return getOrgs(username ?? \"\");\r\n  },\r\n});\r\n\r\nexport default organizationsState;\r\n","import React, { FC } from \"react\";\r\nimport \"./OrgCard.css\";\r\n\r\nimport BEMHelper from \"react-bem-helper\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Organization } from \"../../types/Organization\";\r\n\r\nconst classes = new BEMHelper(\"org-card\");\r\n\r\ninterface Props {\r\n  org: Organization;\r\n}\r\n\r\nconst OrgCard: FC<Props> = ({ org }) => (\r\n  <div {...classes()}>\r\n    <div {...classes(\"header\")}>\r\n      <img\r\n        {...classes(\"avatar\")}\r\n        src={org.avatar_url}\r\n        alt=\"organization avatar\"\r\n      />\r\n      <div {...classes(\"info\")}>\r\n        <Link {...classes(\"name\")} to={`/users/${org.login}/info`}>\r\n          {org.login}\r\n        </Link>\r\n        <p {...classes(\"id\")}>{`id: ${org.id}`}</p>\r\n      </div>\r\n    </div>\r\n    <p {...classes(\"description\")}>{org.description || \"No description ...\"}</p>\r\n  </div>\r\n);\r\n\r\nexport default OrgCard;\r\n","import React from \"react\";\r\nimport \"./Organizations.css\";\r\n\r\nimport BEMHelper from \"react-bem-helper\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport DomainDisabledIcon from \"@material-ui/icons/DomainDisabled\";\r\nimport { organizationsState } from \"../../atoms/organizations\";\r\nimport OrgCard from \"../OrgCard\";\r\nimport { userState } from \"../../atoms/user\";\r\nimport IconMessage from \"../IconMessage\";\r\n\r\nconst classes = new BEMHelper(\"organizations\");\r\n\r\nconst Organizations = () => {\r\n  const user = useRecoilValue(userState);\r\n  const organizations = useRecoilValue(organizationsState);\r\n\r\n  if (organizations.length === 0) {\r\n    return (\r\n      <IconMessage Icon={DomainDisabledIcon}>\r\n        <p>\r\n          The user <span {...classes(\"username\")}>{user?.login}</span> does not\r\n          have any organizations\r\n        </p>\r\n      </IconMessage>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div {...classes()}>\r\n      {organizations.map((organization) => (\r\n        <OrgCard org={organization} key={organization.id} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Organizations;\r\n","import React, { FC } from \"react\";\r\nimport \"./ErrorFallback.css\";\r\n\r\nimport BEMHelper from \"react-bem-helper\";\r\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\";\r\nimport { FallbackProps } from \"react-error-boundary\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport IconMessage from \"../IconMessage\";\r\n\r\nconst classes = new BEMHelper(\"error-fallback\");\r\n\r\nconst ErrorFallback: FC<FallbackProps> = ({ error, resetErrorBoundary }) => (\r\n  <IconMessage {...classes()} Icon={ErrorOutlineIcon}>\r\n    <p {...classes(\"title\")}>Oh no, something went wrong.</p>\r\n    <p>Error: {error.message}</p>\r\n    <Button variant=\"outlined\" onClick={resetErrorBoundary}>\r\n      Try again\r\n    </Button>\r\n  </IconMessage>\r\n);\r\n\r\nexport default ErrorFallback;\r\n","import React from \"react\";\r\nimport \"./UserNav.css\";\r\n\r\nimport BEMHelper from \"react-bem-helper\";\r\nimport { Redirect, Route, Switch, useRouteMatch } from \"react-router-dom\";\r\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\r\nimport FolderOpenOutlinedIcon from \"@material-ui/icons/FolderOpenOutlined\";\r\nimport DomainOutlinedIcon from \"@material-ui/icons/DomainOutlined\";\r\nimport { ErrorBoundary } from \"react-error-boundary\";\r\nimport NavItem from \"../NavItem\";\r\nimport Information from \"../Information\";\r\nimport Spinner from \"../Spinner\";\r\nimport Repositories from \"../Repositories\";\r\nimport Organizations from \"../Organizations\";\r\nimport ErrorFallback from \"../ErrorFallback\";\r\n\r\nconst classes = new BEMHelper(\"user-nav\");\r\n\r\nconst UserNav = () => {\r\n  const match = useRouteMatch();\r\n\r\n  const fallback = (\r\n    <div {...classes(\"spinner-wrapper\")}>\r\n      <Spinner />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div {...classes()}>\r\n      <nav {...classes(\"nav\")}>\r\n        <NavItem Icon={InfoOutlinedIcon} linkTo=\"info\" text=\"information\" />\r\n        <NavItem\r\n          Icon={FolderOpenOutlinedIcon}\r\n          linkTo=\"repos\"\r\n          text=\"repositories\"\r\n        />\r\n        <NavItem Icon={DomainOutlinedIcon} linkTo=\"orgs\" text=\"organizations\" />\r\n      </nav>\r\n      <ErrorBoundary FallbackComponent={ErrorFallback}>\r\n        <React.Suspense fallback={fallback}>\r\n          <Switch>\r\n            <Route path={`${match.path}/info`}>\r\n              <Information />\r\n            </Route>\r\n            <Route path={`${match.path}/repos`}>\r\n              <Repositories />\r\n            </Route>\r\n            <Route path={`${match.path}/orgs`}>\r\n              <Organizations />\r\n            </Route>\r\n            <Route>\r\n              <Redirect to=\"/not-found\" />\r\n            </Route>\r\n          </Switch>\r\n        </React.Suspense>\r\n      </ErrorBoundary>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserNav;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./UserPage.css\";\r\n\r\nimport BEMHelper from \"react-bem-helper\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport UserNav from \"../UserNav\";\r\nimport { userState } from \"../../atoms/user\";\r\nimport { getUserData } from \"../../api\";\r\nimport Spinner from \"../Spinner\";\r\nimport IconMessage from \"../IconMessage\";\r\n\r\nconst classes = new BEMHelper(\"user-page\");\r\n\r\nconst UserPage = () => {\r\n  const [error, setError] = useState<boolean>(false);\r\n  const { username } = useParams<{ username: string }>();\r\n  const [user, setUser] = useRecoilState(userState);\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      setUser(null);\r\n      setError(false);\r\n      try {\r\n        const fetchedUser = await getUserData(username);\r\n        setUser(fetchedUser);\r\n      } catch (err) {\r\n        setUser(null);\r\n        setError(true);\r\n      }\r\n    };\r\n\r\n    fetchUser();\r\n  }, [username]);\r\n\r\n  if (error) {\r\n    return (\r\n      <IconMessage Icon={SearchIcon}>\r\n        <p>\r\n          Unfortunately, the user{\" \"}\r\n          <span {...classes(\"error-highlight\")}>{username}</span> was not found\r\n        </p>\r\n        <p {...classes(\"error-subtext\")}>Try searching for a different user</p>\r\n      </IconMessage>\r\n    );\r\n  }\r\n\r\n  if (!user) {\r\n    return (\r\n      <div {...classes(\"spinner-wrapper\")}>\r\n        <Spinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div {...classes()}>\r\n      <div {...classes(\"panel\")}>\r\n        <div {...classes(\"info-wrapper\")}>\r\n          <img {...classes(\"avatar\")} src={user.avatar_url} alt=\"user avatar\" />\r\n          <a {...classes(\"username\")} href={user.html_url}>\r\n            {user.login}\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <div {...classes(\"content\")}>\r\n        <UserNav />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPage;\r\n","import React from \"react\";\r\nimport \"./NotFound.css\";\r\n\r\nimport BEMHelper from \"react-bem-helper\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst classes = new BEMHelper(\"not-found\");\r\n\r\nconst NotFound = () => (\r\n  <div {...classes()}>\r\n    <h1 {...classes(\"title\")}>404</h1>\r\n    <h2 {...classes(\"subtitle\")}>Page Not Found</h2>\r\n    <p {...classes(\"text\")}>\r\n      Sorry, the page that you were looking for was not found. You can navigate\r\n      back to{\" \"}\r\n      <Link {...classes(\"link\")} to=\"/\">\r\n        homepage\r\n      </Link>\r\n      .\r\n    </p>\r\n  </div>\r\n);\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\nimport \"./App.css\";\n\nimport BEMHelper from \"react-bem-helper\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from \"../Header\";\nimport Home from \"../Home\";\nimport UserPage from \"../UserPage\";\nimport NotFound from \"../NotFound\";\n\nconst classes = new BEMHelper(\"app\");\n\nconst App = () => (\n  <div {...classes()}>\n    <Router basename=\"/github-repositories\">\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/users/:username\">\n          <UserPage />\n        </Route>\n        <Route>\n          <NotFound />\n        </Route>\n      </Switch>\n    </Router>\n  </div>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { RecoilRoot } from \"recoil\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}